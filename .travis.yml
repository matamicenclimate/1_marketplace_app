os: linux
dist: bionic
language: node_js
node_js:
  - lts/*

notifications:
  slack:
    secure: khWN80suyIyPB7nrxAHyyxYape3kxWIXqbCj6IAgpIXLAtmyKdoEcMflvQ5SGjTRFPkV2HSnqOUKIkNsQg62NVRxBZYk0b8iwjhJfsdFi0AGhdy8D5HaxWN3+MzaZ5fgBqpYWpvGF2OiN7096JW8NVAZbpBFDYcGkL9IkGLwraGpTaK5p5E8N+kOSJURVYx6dYEFPKaWcAprAYHxtgTJv4cfyVghPhlaCEEEk1zhIsIOt1UM5ViYvmQl/cxGRJYMJDRlQstVT06Yghp4SxPjILz7mONocKMlQuTvXnmDIVNazwjHhPLn18Z0/O7rcPQL602RuDy/bNy1OKCLvqobtlXKxkQhaGd+YT7FgN9dUvVMFBpo17GFCcEzNDKhU7dical2TO6DS8IpL7C6t8eWRmdvfmU8Ss9d3WBz+DwEHbu/xowMMJnwGLPtSPUBwkLJKjzLP1h32ETHJt+uS1K5rTGkhcRP7+x/ojNTpZUPc1eS64y4tJYXdF4Ioc1hj2OBNpEHac17CrDiJC9F2cLw4VeIU2kB9tJdFPhJfiHOsd/citHtt1FTWYn8mBN1yVmh1ZTC8LWx9z+pDKMEzmpCNd0qkH4CWmInS3/jv1RnHKO+BAntqWaiUF4EIdUcUAuzczcWryruyWomzxtTkyiiWW/kDek6315NVzxwf24MZKA=
    template:
      - '*Project:* %{repository_name}'
      - '*Build:* <%{build_url}|#%{build_number}> (<%{compare_url}|%{commit}>) of %{repository_slug}@%{branch}'
      - '*Duration:* %{duration}'
      - '*Result:* %{result}'
      - '*Message:* %{message}'
env:
  global:
    - PROJECT_NAME=climatenft
    - REPO_NAME=climate-nft-marketplace-app
jobs:
  include:
    - stage: test
      if: '(branch = develop AND (type = pull_request OR type = push))'
      addons:
        apt:
          packages:
            - python3
            - python3-pip
            - gcc
            - g++
            - make
      before_script:
        - npm install -g node-gyp
      script:
        - yarn test
    - stage: build and push latest
      if: '(branch = develop AND type = push)'
      services:
        - docker
      script:
        - npm install
        - CI=false npm run build
        - VERSION=`node -p "require('./package.json').version"`
        - IMAGE_ID=registry.dekaside.com/$PROJECT_NAME/$REPO_NAME
        - docker build . -f ./compose/staging/Dockerfile --tag $IMAGE_ID:latest
        - docker build . -f ./compose/pre/Dockerfile --tag ${IMAGE_ID}:pre-${VERSION}
        - docker build . -f ./compose/prod/Dockerfile --tag $IMAGE_ID:$VERSION
        - echo "$HARBOR_PASSWORD" | docker login registry.dekaside.com --username "$HARBOR_USERNAME"
          --password-stdin
        - docker push "${IMAGE_ID}:${VERSION}
        - docker push "${IMAGE_ID}:pre-${VERSION}
        - docker push $IMAGE_ID:latest
    - stage: deploy
      if: (branch = develop AND type = push)
      script:
        - curl -X POST "${SERVICE_WEBHOOK_STAGING}"
